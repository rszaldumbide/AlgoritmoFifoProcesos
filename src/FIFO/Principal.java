/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FIFO;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ricardo
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    metodos m;
    private int cantidad;
    
    
    public Principal() {
        initComponents();
        m=new metodos(); 
        this.setExtendedState(MAXIMIZED_BOTH);
        ((DefaultTableCellRenderer) tblProcesos.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        ((DefaultTableCellRenderer) tblRafaga.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        ((DefaultTableCellRenderer) tblResultados.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFONDO1 = new javax.swing.JPanel();
        PNLFONDO2 = new javax.swing.JPanel();
        pnlALGORITMOFIFO = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtcantidadProcesos = new javax.swing.JTextField();
        btnAgregarProceso = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnSalir1 = new javax.swing.JButton();
        pnlTABLAPROCESOS = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProcesos = new ColorColumnas();
        btnEjecutarFIFO = new javax.swing.JButton();
        lblValorRafaga = new javax.swing.JLabel();
        pnlResultados = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblPromedioTT = new javax.swing.JLabel();
        lblPromedioW = new javax.swing.JLabel();
        lblPromedioP = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblResultados = new ColorColumnas();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRafaga = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlFONDO1.setBackground(new java.awt.Color(255, 255, 255));

        PNLFONDO2.setBackground(new java.awt.Color(0, 0, 0));

        pnlALGORITMOFIFO.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ALGORITMO FIFO");

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel2.setText("Cantidad de Procesos:");

        btnAgregarProceso.setBackground(new java.awt.Color(0, 0, 0));
        btnAgregarProceso.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnAgregarProceso.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarProceso.setText("Mostrar Procesos");
        btnAgregarProceso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProcesoActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(0, 0, 0));
        btnReset.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Limpiar");
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSalir1.setBackground(new java.awt.Color(0, 0, 0));
        btnSalir1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnSalir1.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir1.setText("Salir");
        btnSalir1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlALGORITMOFIFOLayout = new javax.swing.GroupLayout(pnlALGORITMOFIFO);
        pnlALGORITMOFIFO.setLayout(pnlALGORITMOFIFOLayout);
        pnlALGORITMOFIFOLayout.setHorizontalGroup(
            pnlALGORITMOFIFOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlALGORITMOFIFOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlALGORITMOFIFOLayout.createSequentialGroup()
                .addContainerGap(460, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtcantidadProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregarProceso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
        );
        pnlALGORITMOFIFOLayout.setVerticalGroup(
            pnlALGORITMOFIFOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlALGORITMOFIFOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlALGORITMOFIFOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtcantidadProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarProceso)
                    .addComponent(btnReset)
                    .addComponent(btnSalir1))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pnlTABLAPROCESOS.setBackground(new java.awt.Color(255, 255, 255));
        pnlTABLAPROCESOS.setPreferredSize(new java.awt.Dimension(750, 350));

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TABLA DE LOS PROCESOS DENTRO DE LISTO");

        tblProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PROCESOS", "TIEMPO LLEGADA (L)", "TIEMPO EJECUCION (U)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProcesos.setColumnSelectionAllowed(true);
        tblProcesos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblProcesos);
        tblProcesos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblProcesos.getColumnModel().getColumnCount() > 0) {
            tblProcesos.getColumnModel().getColumn(0).setResizable(false);
        }

        btnEjecutarFIFO.setBackground(new java.awt.Color(0, 0, 0));
        btnEjecutarFIFO.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnEjecutarFIFO.setForeground(new java.awt.Color(255, 255, 255));
        btnEjecutarFIFO.setText("Ejecutar FIFO");
        btnEjecutarFIFO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarFIFOActionPerformed(evt);
            }
        });

        lblValorRafaga.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblValorRafaga.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlTABLAPROCESOSLayout = new javax.swing.GroupLayout(pnlTABLAPROCESOS);
        pnlTABLAPROCESOS.setLayout(pnlTABLAPROCESOSLayout);
        pnlTABLAPROCESOSLayout.setHorizontalGroup(
            pnlTABLAPROCESOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTABLAPROCESOSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTABLAPROCESOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlTABLAPROCESOSLayout.createSequentialGroup()
                        .addGap(0, 264, Short.MAX_VALUE)
                        .addComponent(btnEjecutarFIFO)
                        .addGap(18, 18, 18)
                        .addComponent(lblValorRafaga, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlTABLAPROCESOSLayout.setVerticalGroup(
            pnlTABLAPROCESOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTABLAPROCESOSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTABLAPROCESOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEjecutarFIFO, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblValorRafaga, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlResultados.setBackground(new java.awt.Color(255, 255, 255));
        pnlResultados.setPreferredSize(new java.awt.Dimension(750, 350));

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("RESULTADO DEL PROCESO FIFO");

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PROMEDIOS:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblPromedioTT.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lblPromedioTT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblPromedioW.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lblPromedioW.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblPromedioP.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        lblPromedioP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Procesos", "Tiempo Llegada", "Tiempo Ejecucion", "Tiempo Finalizado", "T", "W", "P"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResultados.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tblResultados);
        if (tblResultados.getColumnModel().getColumnCount() > 0) {
            tblResultados.getColumnModel().getColumn(0).setResizable(false);
            tblResultados.getColumnModel().getColumn(1).setResizable(false);
            tblResultados.getColumnModel().getColumn(2).setResizable(false);
            tblResultados.getColumnModel().getColumn(3).setResizable(false);
            tblResultados.getColumnModel().getColumn(4).setResizable(false);
            tblResultados.getColumnModel().getColumn(5).setResizable(false);
            tblResultados.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout pnlResultadosLayout = new javax.swing.GroupLayout(pnlResultados);
        pnlResultados.setLayout(pnlResultadosLayout);
        pnlResultadosLayout.setHorizontalGroup(
            pnlResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlResultadosLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPromedioTT, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPromedioW, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPromedioP, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        pnlResultadosLayout.setVerticalGroup(
            pnlResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPromedioP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPromedioTT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPromedioW, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("RAFAGA DE TIEMPO");

        tblRafaga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblRafaga.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblRafaga);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PNLFONDO2Layout = new javax.swing.GroupLayout(PNLFONDO2);
        PNLFONDO2.setLayout(PNLFONDO2Layout);
        PNLFONDO2Layout.setHorizontalGroup(
            PNLFONDO2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNLFONDO2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PNLFONDO2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlALGORITMOFIFO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PNLFONDO2Layout.createSequentialGroup()
                        .addComponent(pnlTABLAPROCESOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlResultados, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PNLFONDO2Layout.setVerticalGroup(
            PNLFONDO2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNLFONDO2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlALGORITMOFIFO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PNLFONDO2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlTABLAPROCESOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlFONDO1Layout = new javax.swing.GroupLayout(pnlFONDO1);
        pnlFONDO1.setLayout(pnlFONDO1Layout);
        pnlFONDO1Layout.setHorizontalGroup(
            pnlFONDO1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFONDO1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PNLFONDO2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlFONDO1Layout.setVerticalGroup(
            pnlFONDO1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFONDO1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PNLFONDO2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFONDO1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFONDO1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel proceso = (DefaultTableModel)tblProcesos.getModel();
            DefaultTableModel resultado = (DefaultTableModel)tblResultados.getModel();
            DefaultTableModel rafaga = (DefaultTableModel)tblRafaga.getModel();
            
            proceso.setRowCount(0);
            resultado.setRowCount(0);
            rafaga.setRowCount(0);
            rafaga.setColumnCount(0);
            
            lblPromedioP.setText("");
            lblPromedioTT.setText("");
            lblPromedioW.setText("");
            lblValorRafaga.setText("");
            
            txtcantidadProcesos.setText("");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnAgregarProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProcesoActionPerformed
        // TODO add your handling code here:
        try{
            cantidad=Integer.parseInt(txtcantidadProcesos.getText());
            if(cantidad>0){
                m.imprimirMatriz(m.MatrizProcesos(cantidad), cantidad, tblProcesos );
                centrarTablas();
            }else{
                JOptionPane.showMessageDialog(null, "Ingrese un numero mayor a 0");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }   
    }//GEN-LAST:event_btnAgregarProcesoActionPerformed

    private void btnEjecutarFIFOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarFIFOActionPerformed
        // TODO add your handling code here:
        try{
            
            int inicio=Integer.parseInt(tblProcesos.getValueAt(0, 1).toString());
            
            cantidad=Integer.parseInt(txtcantidadProcesos.getText());
            //imprimir la matriz de resultados
            m.imprimirMatriz(m.MatrizProcesos(cantidad), cantidad, tblResultados);
            //aplicamos los calculos de la tabla
            calculosTabla();
            //se escribe los resultados en los labels
            lblPromedioTT.setText("T: "+promedioT());
            lblPromedioW.setText("W: "+promedioW());
            lblPromedioP.setText("P: "+promedioP());
            
            if(inicio!=0){
                lblValorRafaga.setText("La rafaga es igual a: "+(calculoRafaga()-inicio)); 
            }else{
                lblValorRafaga.setText("La rafaga es igual a: "+calculoRafaga()); 
            }
            
            //imprimir la matriz de rafaga
            m.imprimirMatrizRafaga(m.Matrizrafaga(cantidad+1), cantidad, (calculoRafaga()+1), tblRafaga);
            llenado();
            centrarTablas2();
            
            //se pinta la matriz
            
            for(int i=0; i<(calculoRafaga()+1); i++){
                tblRafaga.getColumnModel().getColumn(i).setCellRenderer(new colorCelda());
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }  
    }//GEN-LAST:event_btnEjecutarFIFOActionPerformed

    private void btnSalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnSalir1ActionPerformed
    
    private void llenado(){
       
        DefaultTableModel rafaga = (DefaultTableModel)tblRafaga.getModel();
        int Tf, Tf2, L;
        int aux;
        
        int inicio=Integer.parseInt(tblProcesos.getValueAt(0, 1).toString());
        
        if(inicio!=0){
            aux=inicio;
            for(int i=0; i<cantidad; i++){
            //llenar los datos de la tabla inicial a la de resultados
                L = Integer.parseInt(tblResultados.getValueAt(i, 1).toString());
                Tf = Integer.parseInt(tblResultados.getValueAt(i, 3).toString());

                while(aux!=Tf){
                    rafaga.setValueAt(1, i, aux+1); 
                    aux++;
                }   
            }
            for(int i=0; i<cantidad; i++){
            //llenar los datos de la tabla inicial a la de resultados
                L = Integer.parseInt(tblResultados.getValueAt(i, 1).toString());
                Tf = Integer.parseInt(tblResultados.getValueAt(i, 3).toString());
                if(i==0){
                    for(int j= (L+inicio); j<Tf; j++){
                        rafaga.setValueAt(1, i, (j+1)); 
                    }   
                }else{
                    Tf2 = Integer.parseInt(tblResultados.getValueAt((i-1), 3).toString());
                    for(int j= L; j<Tf2; j++){
                        rafaga.setValueAt(0, i, (j+1)); 
                    } 
                } 
            }
        }else{
            aux=0;
            for(int i=0; i<cantidad; i++){
            //llenar los datos de la tabla inicial a la de resultados
                L = Integer.parseInt(tblResultados.getValueAt(i, 1).toString());
                Tf = Integer.parseInt(tblResultados.getValueAt(i, 3).toString());

                while(aux!=Tf){
                    rafaga.setValueAt(1, i, aux+1); 
                    aux++;
                }   
            }
            for(int i=0; i<cantidad; i++){
            //llenar los datos de la tabla inicial a la de resultados
                L = Integer.parseInt(tblResultados.getValueAt(i, 1).toString());
                Tf = Integer.parseInt(tblResultados.getValueAt(i, 3).toString());
                if(i==0){
                    for(int j= (L+inicio); j<(Tf+inicio); j++){
                        rafaga.setValueAt(1, i, (j+1)); 
                    }   
                }else{
                    Tf2 = Integer.parseInt(tblResultados.getValueAt((i-1), 3).toString());
                    for(int j= (L+inicio); j<(Tf2+inicio); j++){
                        rafaga.setValueAt(0, i, (j+1)); 
                    } 
                } 
            }
        }
        
    }
    
    private int calculoRafaga(){ 
        cantidad=Integer.parseInt(txtcantidadProcesos.getText());
        int tmp, rafaga=0, rafaga2;
        
        int inicio=Integer.parseInt(tblProcesos.getValueAt(0, 1).toString());
        
        if(inicio!=0){
            for(int i=0; i<cantidad; i++){
                tmp = Integer.parseInt(tblProcesos.getValueAt(i, 2).toString());
                rafaga=tmp+rafaga;
                }
            rafaga2=inicio+rafaga;
        }else{
            for(int i=0; i<cantidad; i++){
                tmp = Integer.parseInt(tblProcesos.getValueAt(i, 2).toString());
                rafaga=tmp+rafaga;
                }
            rafaga2=rafaga;
        }
        
        return rafaga2;
    }
    
    private void centrarTablas(){
        //centrar los valores de las tablas
        for(int i=0; i< 3; i++){
            if(i==0){
                DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
                tcr.setHorizontalAlignment(SwingConstants.RIGHT);
                tblProcesos.getColumnModel().getColumn(i).setCellRenderer(tcr);   
            }else{
                DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
                tcr.setHorizontalAlignment(SwingConstants.CENTER);
                tblProcesos.getColumnModel().getColumn(i).setCellRenderer(tcr);  
            }   
        } 
    }
    
    private void centrarTablas2(){
        //centrar los valores de las tablas   
        for(int i=0; i< (calculoRafaga()+1); i++){
            if(i==0){
                DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
                tcr.setHorizontalAlignment(SwingConstants.RIGHT);
                tblRafaga.getColumnModel().getColumn(i).setCellRenderer(tcr); 
            }else{
                DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
                tcr.setHorizontalAlignment(SwingConstants.CENTER);
                tblRafaga.getColumnModel().getColumn(i).setCellRenderer(tcr);
            }
        }
            
        for(int i=0; i< 7; i++){
            if(i==0){
                DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
                tcr.setHorizontalAlignment(SwingConstants.RIGHT);
                tblResultados.getColumnModel().getColumn(i).setCellRenderer(tcr);  
            }else{
                DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
                tcr.setHorizontalAlignment(SwingConstants.CENTER);
                tblResultados.getColumnModel().getColumn(i).setCellRenderer(tcr); 
            } 
        }  
    }
    
    private void calculosTabla(){
        
        DefaultTableModel resultados = (DefaultTableModel)tblResultados.getModel();
        int res=0;
        double L, U, Tf, T, W;
        double P;
            
        for(int i=0; i<cantidad; i++){
        //llenar los datos de la tabla inicial a la de resultados
            L = Math.round(Double.parseDouble(tblProcesos.getValueAt(i, 1).toString()));
            U = Math.round(Double.parseDouble(tblProcesos.getValueAt(i, 2).toString()));
            resultados.setValueAt((int)(L), i, 1);                
            resultados.setValueAt((int)(U), i, 2);

            //Tiempo Finalizacion!!
            if(i==0){
                Tf=Math.round(L+U);
                resultados.setValueAt((int)(Tf), 0, 3);
            }else{
                Tf=0;
                U = Math.round(Double.parseDouble(tblProcesos.getValueAt(i, 2).toString()));
                Tf=Math.round(Double.parseDouble(tblResultados.getValueAt((i-1), 3).toString()));
                resultados.setValueAt((int)(Tf+U), i, 3);
            }

            //Tiempo de trabajo
            Tf=Math.round(Double.parseDouble(tblResultados.getValueAt((i), 3).toString()));
            T=Math.round(Tf-L);
            resultados.setValueAt((int)(T), i, 4);

            //Tiempo de espera
            T=Math.round(Double.parseDouble(tblResultados.getValueAt((i), 4).toString()));
            W=Math.round(T-U);
            resultados.setValueAt((int)(W), i, 5);

            //tiempo P
            P=(T/U);
            res=round(P);
            resultados.setValueAt(res, i, 6);
        }  
    }
    
    private int round(double d){ 
        double dAbs = Math.abs(d); 
        int i = (int) dAbs; 
        double result = dAbs - (double) i; 
        if(result<0.5){ 
            return d<0 ? -i : i;
        }else{ 
            return d<0 ? -(i+1) : i+1; }
    }

    private int promedioT(){
        int res=0;
        double tmp, promedioT=0, suma=0;
        for(int i=0; i<cantidad; i++){
            tmp = Double.parseDouble(tblResultados.getValueAt(i, 4).toString());
            suma=tmp+suma;
            promedioT=suma/cantidad;
        } 
        res=round(promedioT);
        
        return res;
    }
    
    private int promedioW(){
        int res=0;
        double tmp, promedioW=0, suma=0;
        for(int i=0; i<cantidad; i++){
            tmp = Double.parseDouble(tblResultados.getValueAt(i, 5).toString());
            suma=tmp+suma;
            promedioW=suma/cantidad;
        }
        res=round(promedioW);
        
        return res;
    }
    
    private int promedioP(){
        int res=0;
        double tmp, promedioP=0, suma=0;
        for(int i=0; i<cantidad; i++){
            tmp = Math.round(Integer.parseInt(tblResultados.getValueAt(i, 6).toString()));
            suma=Math.round(tmp+suma);    
            promedioP=(suma/cantidad); 
        }
        res=round(promedioP);
        
        return res;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PNLFONDO2;
    private javax.swing.JButton btnAgregarProceso;
    private javax.swing.JButton btnEjecutarFIFO;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSalir1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblPromedioP;
    private javax.swing.JLabel lblPromedioTT;
    private javax.swing.JLabel lblPromedioW;
    private javax.swing.JLabel lblValorRafaga;
    private javax.swing.JPanel pnlALGORITMOFIFO;
    private javax.swing.JPanel pnlFONDO1;
    private javax.swing.JPanel pnlResultados;
    private javax.swing.JPanel pnlTABLAPROCESOS;
    private javax.swing.JTable tblProcesos;
    public javax.swing.JTable tblRafaga;
    private javax.swing.JTable tblResultados;
    private javax.swing.JTextField txtcantidadProcesos;
    // End of variables declaration//GEN-END:variables
}
